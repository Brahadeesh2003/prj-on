---
import BaseLayout from '../layouts/BaseLayout.astro';
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';
---

<BaseLayout title="Contact Us - GoVal">
  <Navigation />

  <!-- Contact Hero Section -->
  <section class="hero">
    <div class="hero-container">
      <div class="hero-content">
        <h1 class="hero-title">Contact Us</h1>
        <p class="hero-subtitle">
          Got Questions? We are here to help.
        </p>
      </div>
    </div>
  </section>

  <!-- Contact Form Section -->
  <section class="section">
    <div class="container">
      <div class="contact-layout">
        <!-- Left Side - Contact Info -->
        <div class="contact-info">
          <h2 class="contact-info-title">Contact GoVal</h2>
          <p class="contact-info-subtitle">
            Have something to say? We are here to help. Fill up the form or send email or call phone.
          </p>

          <div class="contact-details">
            <div class="contact-detail">
              <div class="contact-icon">
                <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                </svg>
              </div>
              <div class="contact-text">
                <span class="contact-label">Address</span>
                <span class="contact-value">Life Sciences Hub, Bangalore, India</span>
              </div>
            </div>

            <div class="contact-detail">
              <div class="contact-icon">
                <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                </svg>
              </div>
              <div class="contact-text">
                <span class="contact-label">Email</span>
                <span class="contact-value">bdsh2003@gmail.com</span>
              </div>
            </div>

            <div class="contact-detail">
              <div class="contact-icon">
                <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                </svg>
              </div>
              <div class="contact-text">
                <span class="contact-label">Phone</span>
                <span class="contact-value">+91 (987) 654 3210</span>
              </div>
            </div>
          </div>
        </div>

        <!-- Right Side - Web3Forms Contact Form -->
        <div class="contact-form-container">
          <div id="form-message" class="hidden"></div>

          <!-- Web3Forms Contact Form -->
          <form id="contact-form" class="contact-form" action="https://api.web3forms.com/submit" method="POST">
            <!-- Web3Forms Access Key - REPLACE WITH YOUR ACTUAL ACCESS KEY -->
            <input type="hidden" name="access_key" value="YOUR_WEB3FORMS_ACCESS_KEY_HERE">

            <!-- Optional: Redirect after submission -->
            <input type="hidden" name="redirect" value="https://yourdomain.com/thank-you">

            <!-- Optional: Subject line -->
            <input type="hidden" name="subject" value="New Contact Form Submission from GoVal Website">

            <!-- Optional: From name -->
            <input type="hidden" name="from_name" value="GoVal Website Contact Form">

            <!-- Honeypot field for spam protection -->
            <input type="checkbox" name="botcheck" class="hidden">

            <!-- Full Name Field -->
            <div class="form-group">
              <input
                type="text"
                name="name"
                required
                placeholder="Full Name"
                class="form-input"
                maxlength="100"
              />
              <div class="field-error" id="name-error"></div>
            </div>

            <!-- Company Name Field -->
            <div class="form-group">
              <input
                type="text"
                name="company"
                placeholder="Company Name"
                class="form-input"
                maxlength="100"
              />
              <div class="field-error" id="company-error"></div>
            </div>

            <!-- Email Field -->
            <div class="form-group">
              <input
                type="email"
                name="email"
                required
                placeholder="Email Address"
                class="form-input"
                maxlength="100"
              />
              <div class="field-error" id="email-error"></div>
            </div>

            <!-- Phone Field -->
            <div class="form-group">
              <input
                type="tel"
                name="phone"
                required
                placeholder="Phone Number"
                class="form-input"
                maxlength="20"
              />
              <div class="field-error" id="phone-error"></div>
            </div>

            <!-- Message Field -->
            <div class="form-group">
              <textarea
                name="message"
                required
                rows="5"
                placeholder="Your Message"
                class="form-textarea"
                maxlength="2000"
              ></textarea>
              <div class="char-count" id="message-count">0 / 2000 characters</div>
              <div class="field-error" id="message-error"></div>
            </div>

            <!-- Submit Button -->
            <button type="submit" id="submit-btn" class="submit-btn">
              <span id="btn-text">Send Message</span>
              <svg id="btn-icon" width="18" height="18" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
              </svg>
            </button>
          </form>
        </div>
      </div>
    </div>
  </section>

  <Footer />
</BaseLayout>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contact-form');
    const submitBtn = document.getElementById('submit-btn');
    const btnText = document.getElementById('btn-text');
    const btnIcon = document.getElementById('btn-icon');
    const messageDiv = document.getElementById('form-message');
    const messageField = document.querySelector('textarea[name="message"]');
    const messageCount = document.getElementById('message-count');

    // Character counter for message field
    if (messageField && messageCount) {
      messageField.addEventListener('input', function() {
        const length = this.value.length;
        messageCount.textContent = `${length} / 2000 characters`;
        messageCount.style.color = length > 1900 ? '#dc2626' : '#6b7280';
      });
    }

    // Form submission handler
    if (form && submitBtn) {
      form.addEventListener('submit', async function(e) {
        e.preventDefault();

        // Show loading state
        submitBtn.disabled = true;
        submitBtn.classList.add('loading');
        btnText.textContent = 'Sending...';
        btnIcon.innerHTML = '<div class="spinner"></div>';

        // Clear previous messages
        messageDiv.classList.add('hidden');

        try {
          // Submit form using fetch API
          const formData = new FormData(form);

          const response = await fetch('https://api.web3forms.com/submit', {
            method: 'POST',
            body: formData
          });

          const result = await response.json();

          if (result.success) {
            // Show success message
            showMessage(`Thank you! Your message has been sent successfully. We will get back to you within 24 hours.`, 'success');

            // Reset form
            form.reset();
            if (messageCount) messageCount.textContent = '0 / 2000 characters';
          } else {
            throw new Error(result.message || 'Failed to send message');
          }

        } catch (error) {
          console.error('Form submission error:', error);

          showMessage('There was an error sending your message. Please try again or contact us directly at bdsh2003@gmail.com.', 'error');
        }

        // Reset button state
        submitBtn.disabled = false;
        submitBtn.classList.remove('loading');
        btnText.textContent = 'Send Message';
        btnIcon.innerHTML = `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>`;
      });
    }

    function showMessage(message, type) {
      messageDiv.className = `alert alert-${type}`;
      messageDiv.innerHTML = `
        <svg class="alert-icon" fill="currentColor" viewBox="0 0 20 20">
          ${type === 'success' ? 
            `<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>` :
            `<path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>`
          }
        </svg>
        ${message}
      `;
      messageDiv.classList.remove('hidden');

      // Auto-hide success messages after 8 seconds
      if (type === 'success') {
        setTimeout(() => {
          messageDiv.classList.add('hidden');
        }, 8000);
      }

      // Scroll to message
      messageDiv.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
  });
</script>

<style>
  /* Global White Background */
  html, body {
    background: #ffffff;
  }

  /* Hero Section */
  .hero {
    background: #ffffff;
    padding: 4rem 0;
    border-bottom: 1px solid #e5e7eb;
  }

  .hero-container {
    max-width: 1280px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .hero-content {
    text-align: center;
  }

  .hero-title {
    font-size: 3rem;
    font-weight: 800;
    color: var(--gray-900);
    margin-bottom: 1rem;
  }

  .hero-subtitle {
    font-size: 1.125rem;
    color: var(--gray-600);
    line-height: 1.6;
  }

  /* Contact Section */
  .section {
    background: #ffffff;
    padding: 5rem 0;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .contact-layout {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    align-items: start;
  }

  /* Contact Info */
  .contact-info {
    padding: 2rem 0;
  }

  .contact-info-title {
    font-size: 2rem;
    font-weight: 700;
    color: var(--gray-900);
    margin-bottom: 1rem;
  }

  .contact-info-subtitle {
    font-size: 1.125rem;
    color: var(--gray-600);
    line-height: 1.6;
    margin-bottom: 3rem;
  }

  .contact-details {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .contact-detail {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
  }

  .contact-icon {
    flex-shrink: 0;
    width: 2.5rem;
    height: 2.5rem;
    background: var(--blue-primary);
    color: white;
    border-radius: 0.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .contact-text {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .contact-label {
    font-size: 0.875rem;
    color: var(--gray-500);
    font-weight: 500;
  }

  .contact-value {
    font-size: 1rem;
    color: var(--gray-900);
    font-weight: 500;
  }

  /* Contact Form */
  .contact-form-container {
    background: white;
    border-radius: 1rem;
    padding: 3rem;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    border: 1px solid rgba(0, 0, 0, 0.05);
  }

  .contact-form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .form-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .form-input,
  .form-textarea {
    width: 100%;
    padding: 1rem 1.25rem;
    border: 2px solid #e5e7eb;
    border-radius: 0.75rem;
    font-size: 1rem;
    color: var(--gray-900);
    background: #f9fafb;
    transition: all 0.3s ease;
    font-family: inherit;
  }

  .form-input:focus,
  .form-textarea:focus {
    outline: none;
    border-color: var(--blue-primary);
    background: white;
    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
  }

  .form-textarea {
    resize: vertical;
    min-height: 120px;
    line-height: 1.5;
  }

  .char-count {
    font-size: 0.75rem;
    color: var(--gray-500);
    text-align: right;
  }

  .submit-btn {
    background: var(--blue-primary);
    color: white;
    border: none;
    padding: 1rem 2rem;
    border-radius: 0.75rem;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    margin-top: 1rem;
  }

  .submit-btn:hover {
    background: var(--blue-secondary);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(99, 102, 241, 0.3);
  }

  .submit-btn:disabled {
    opacity: 0.7;
    cursor: not-allowed;
    transform: none;
  }

  .submit-btn.loading {
    background: #9ca3af;
  }

  .field-error {
    display: none;
    color: #dc2626;
    font-size: 0.875rem;
  }

  .hidden {
    display: none;
  }

  /* Honeypot */
  .hidden {
    position: absolute !important;
    height: 1px;
    width: 1px;
    overflow: hidden;
    clip: rect(1px 1px 1px 1px);
  }

  /* Spinner animation */
  .spinner {
    width: 0.875rem;
    height: 0.875rem;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  /* Alert messages */
  .alert {
    padding: 1rem;
    border-radius: 0.5rem;
    margin-bottom: 1.5rem;
    display: flex;
    align-items: flex-start;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .alert-success {
    background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%);
    border: 1px solid #bbf7d0;
    color: #166534;
  }

  .alert-error {
    background: linear-gradient(135deg, #fef2f2 0%, #fee2e2 100%);
    border: 1px solid #fecaca;
    color: #dc2626;
  }

  .alert-icon {
    width: 1.25rem;
    height: 1.25rem;
    margin-right: 0.5rem;
    flex-shrink: 0;
    margin-top: 0.125rem;
  }

  /* Mobile Responsive */
  @media (max-width: 1024px) {
    .contact-layout {
      grid-template-columns: 1fr;
      gap: 3rem;
    }
  }

  @media (max-width: 768px) {
    .hero {
      padding: 3rem 0;
    }

    .hero-title {
      font-size: 2.5rem;
    }

    .section {
      padding: 3rem 0;
    }

    .contact-layout {
      gap: 2rem;
    }

    .contact-form-container {
      padding: 2rem;
    }

    .contact-info {
      padding: 1rem 0;
    }

    .contact-info-title {
      font-size: 1.75rem;
    }
  }

  @media (max-width: 480px) {
    .hero-title {
      font-size: 2rem;
    }

    .contact-form-container {
      padding: 1.5rem;
    }

    .form-input,
    .form-textarea {
      padding: 0.875rem 1rem;
    }
  }
</style>